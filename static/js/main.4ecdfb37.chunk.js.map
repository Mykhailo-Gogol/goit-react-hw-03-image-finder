{"version":3,"sources":["services/pixabay.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","utils/notifications.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","API_KEY","api","fetchImages","searchQuery","currentPage","pageSize","get","then","data","hits","ImageGalleryItem","webformatURL","largeImageURL","onToggleModal","className","src","alt","data-large","onClick","ImageGallery","images","map","id","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","console","log","type","autoComplete","value","autoFocus","placeholder","onChange","target","Loader","color","height","width","timeout","Button","onLoadMore","Modal","currentImage","toggleModal","handleCloseOnEscape","code","useEffect","window","addEventListener","removeEventListener","currentTarget","App","setImages","loading","setLoading","setCurrentPage","setSearchQuery","errorMessage","setErrorMessage","showModal","setShowModal","setCurrentImage","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","scrollTo","top","document","documentElement","scrollHeight","behavior","prevState","catch","error","message","finally","shouldRenderLoadMoreBtn","toUpperCase","large","dataset","onClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ecdfb37.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\nconst API_KEY = \"19918904-c3236105177a74f036d1e644e\";\n\nconst fetchImages = (searchQuery = \"\", currentPage = 1, pageSize = 12) => {\n  return axios\n    .get(\n      `?q=${searchQuery}&key=${API_KEY}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\n    )\n    .then(({ data }) => data.hits);\n};\n\nconst api = { fetchImages };\n\nexport default api;\n","import \"./ImageGalleryItem.scss\";\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, onToggleModal }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        data-large={largeImageURL}\n        onClick={onToggleModal}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import \"./ImageGallery.scss\";\nimport ImageGalleryItem from \"../ImageGalleryItem/\";\n\nconst ImageGallery = ({ images, onToggleModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          onToggleModal={onToggleModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import \"./Searchbar.scss\";\nimport { useState } from \"react\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleChange = (event) => {\n    event.preventDefault();\n\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(query);\n    onSubmit(query);\n  };\n  return (\n    <>\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            value={query}\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    </>\n  );\n};\n\nexport default Searchbar;\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./Loader.scss\";\nimport ReactLoader from \"react-loader-spinner\";\n\nconst Loader = () => {\n  return (\n    <ReactLoader\n      type=\"Rings\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={500}\n      className=\"Loader\"\n    />\n  );\n};\n\nexport default Loader;\n","import \".//Button.scss\";\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button className=\"Button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import { useEffect } from \"react\";\nimport \"./Modal.scss\";\n\nconst Modal = ({ currentImage, toggleModal }) => {\n  const handleCloseOnEscape = (event) => {\n    if (event.code === \"Escape\") {\n      toggleModal();\n    }\n  };\n  const handleBackdropClose = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      toggleModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleCloseOnEscape);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    return () => window.removeEventListener(\"keydown\", handleCloseOnEscape);\n  });\n\n  return (\n    <div className=\"Overlay\" onClick={handleBackdropClose}>\n      <div className=\"Modal\">\n        <img src={currentImage} alt=\"fullscreen preview\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport api from \"./services/pixabay\";\nimport { warning, success } from \"./utils/notifications\";\nimport ImageGallery from \"./components/ImageGallery/\";\nimport Searchbar from \"./components/Searchbar/\";\nimport Loader from \"./components/Loader\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"\");\n\n  useEffect(() => {\n    if (searchQuery) {\n      fetchImages();\n    }\n    // eslint-disable-next-line\n  }, [searchQuery]);\n\n  const fetchImages = () => {\n    setLoading(true);\n    api\n      .fetchImages(searchQuery, currentPage)\n      .then((hits) => {\n        if (hits.length === 0) {\n          warning();\n        } else {\n          success();\n        }\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        setImages((prevState) => [...prevState, ...hits]);\n        setCurrentPage((prevState) => prevState + 1);\n      })\n      .catch((error) => setErrorMessage(error.message))\n      .finally(() => setLoading(false));\n  };\n\n  const onChangeQuery = (query) => {\n    setSearchQuery(query);\n    if (query !== searchQuery) {\n      setCurrentPage(1);\n      setImages([]);\n    }\n    setErrorMessage(null);\n  };\n\n  const toggleModal = () => {\n    setShowModal((prevState) => !prevState);\n  };\n\n  const addModalImage = ({ target }) => {\n    const { large } = target.dataset;\n    setCurrentImage(large);\n    toggleModal();\n  };\n\n  const shouldRenderLoadMoreBtn = images.length > 0 && !loading;\n\n  return (\n    <>\n      {errorMessage ? (\n        <h1>{errorMessage.toUpperCase()}</h1>\n      ) : (\n        <div>\n          <Searchbar onSubmit={onChangeQuery} />\n          <ImageGallery images={images} onToggleModal={addModalImage} />\n          {loading && <Loader />}\n          {shouldRenderLoadMoreBtn && <Button onLoadMore={fetchImages} />}\n          {showModal && currentImage && (\n            <Modal\n              onClose={toggleModal}\n              currentImage={currentImage}\n              toggleModal={toggleModal}\n            />\n          )}\n          <ToastContainer />\n        </div>\n      )}\n    </>\n  );\n};\nexport default App;\n","import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const warning = () => {\n  toast.warn(\"No matches found!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport const success = () => {\n  toast.success(\"👍 Searching is cool!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}